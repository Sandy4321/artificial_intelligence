knitr::opts_chunk$set(echo = TRUE)
library(rtweet)
AI <- search_tweets(
"#AI", n = 1000, include_rts = FALSE
)
View(AI)
library(rtweet)
AI <- search_tweets(
"#AI", n = 10000, include_rts = FALSE
)
View(AI)
tidyr::unnest(AI, hashtags)
tidyr::unnest(AI, hashtags) %>% View()
tidyr::unnest(AI, hashtags) %>% count(hashtags, sort = TRUE)
library(tidyverse)
tidyr::unnest(AI, hashtags) %>% count(hashtags, sort = TRUE)
tidyr::unnest(AI, hashtags) %>% count(hashtags, sort = TRUE) %>% View()
trends <- trends_available(token = NULL, parse = TRUE)
View(trends)
usethis::edit_r_environ()
knitr::opts_chunk$set(echo = TRUE)
create_token(
app= Sys.getenv("TWITTER_AI_APP"),
consumer_key = Sys.getenv("TWITTER_AI_CONSUMER_KEY"),
consumer_secret = Sys.getenv("TWITTER_AI_CONSUMER_SECRET")
) -> twitter_token
library(rtweet)
library(rtweet)
create_token(
app= Sys.getenv("TWITTER_AI_APP"),
consumer_key = Sys.getenv("TWITTER_AI_CONSUMER_KEY"),
consumer_secret = Sys.getenv("TWITTER_AI_CONSUMER_SECRET")
) -> twitter_token
library(rtweet)
Sys.getenv("TWITTER_AI_APP")
Sys.getenv("TWITTER_AI_CONSUMER_KEY")
Sys.getenv("TWITTER_AI_CONSUMER_SECRET")
knitr::opts_chunk$set(echo = TRUE)
library(rtweet)
create_token(
app= Sys.getenv("TWITTER_AI_APP"),
consumer_key = Sys.getenv("TWITTER_AI_CONSUMER_KEY"),
consumer_secret = Sys.getenv("TWITTER_AI_CONSUMER_SECRET")
) -> twitter_token
knitr::opts_chunk$set(echo = TRUE)
library(rtweet)
create_token(
app= Sys.getenv("TWITTER_AI_APP"),
consumer_key = Sys.getenv("TWITTER_AI_CONSUMER_KEY"),
consumer_secret = Sys.getenv("TWITTER_AI_CONSUMER_SECRET")
) -> twitter_token
library(rtweet)
create_token(
app = Sys.getenv("TWITTER_AI_APP"),
consumer_key = Sys.getenv("TWITTER_AI_CONSUMER_KEY"),
consumer_secret = Sys.getenv("TWITTER_AI_CONSUMER_SECRET")
) -> twitter_token
knitr::opts_chunk$set(echo = TRUE)
library(rtweet)
create_token(
app = Sys.getenv("TWITTER_AI_APP"),
consumer_key = Sys.getenv("TWITTER_AI_CONSUMER_KEY"),
consumer_secret = Sys.getenv("TWITTER_AI_CONSUMER_SECRET")
) -> twitter_token
knitr::opts_chunk$set(echo = TRUE)
library(rtweet)
create_token(
app = Sys.getenv("TWITTER_APP"),
consumer_key = Sys.getenv("TWITTER_CONSUMER_KEY"),
consumer_secret = Sys.getenv("TWITTER_CONSUMER_SECRET")
) -> twitter_token
?create_token
knitr::opts_chunk$set(echo = TRUE)
library(rtweet)
create_token(
app = Sys.getenv("TWITTER_APP"),
consumer_key = Sys.getenv("TWITTER_CONSUMER_KEY"),
consumer_secret = Sys.getenv("TWITTER_CONSUMER_SECRET")
) -> twitter_token
library(rtweet)
create_token(
app = Sys.getenv("TWITTER_AI_APP"),
consumer_key = Sys.getenv("TWITTER_AI_CONSUMER_KEY"),
consumer_secret = Sys.getenv("TWITTER_AI_CONSUMER_SECRET")
) -> twitter_token
twitter_token <- create_token(app = "ai_wipo_analytics", consumer_key = "cVs9kEDEC7vYOFtnSHcrVAETo", consumer_secret = "mvrkKu58CAbYhqtlZvocSKg5WTX5QeiXxbAI8asglVUsraBCQ0")
Sys.getenv("TWITTER_AI_CONSUMER_KEY")
library(rtweet)
create_token(
app = Sys.getenv("TWITTER_AI_APP"),
consumer_key = Sys.getenv("TWITTER_AI_CONSUMER_KEY"),
consumer_secret = Sys.getenv("TWITTER_AI_CONSUMER_SECRET")
) -> twitter_token
knitr::include_graphics("images/authorize_app.png")
twitter_token
saveRDS(twitter_token, "-/.rtweet_ai.rds")
twitter_token
saveRDS(twitter_token, "-/.rtweet_ai.rds")
saveRDS(twitter_token, "~/.rtweet_ai.rds")
usethis::edit_r_environ()
knitr::opts_chunk$set(echo = TRUE)
library(rtweet)
AI <- search_tweets(
"#AI", n = 10000, include_rts = FALSE
)
View(AI)
?stream_tweets()
stream_tweets("#AI"
timeout = (60 * 10),
stream_tweets("#AI",
timeout = (60 * 10),
parse = FALSE,
file_name = "tweets1" # stores as json
)
stream_tweets("#AI",
timeout = (60 * 10),
parse = FALSE,
file_name = "tweets2"
)
tw1 <- parse_stream("tweets1")
tw1 <- parse_stream("tweets1.json")
View(tw1)
tw2 <- parse_stream("tweets2.json")
View(tw2)
stream_tweets("#AI",
timeout = (60 * 10),
parse = FALSE,
file_name = "tweets3" # stores as json
)
stream_tweets("#AI",
timeout = (60 * 10),
parse = FALSE,
file_name = "tweets4"
)
knitr::opts_chunk$set(echo = TRUE)
library(tidytext)
ai_hashtags <- AI %>%
unnest(hashtags)
# divide into words and remove stopwords
ai_tokens <- AI %>%
unnest_tokens(., word, text) %>%
anti_join(stop_words)
# join to sentiments dictionary (in this case bing)
ai_sentiment <- ai_tokens %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
# What are the top positive terms in the tweets
ai_sentiment %>%
arrange(sentiment) %>%
View()
# Wnat are the top ranking negative terms
ai_sentiment %>%
dplyr::filter(sentiment <= 0) %>%
arrange(sentiment) %>%
View()
# This is a very raw quick look at sentiments to see what comes up
ai_sentiment %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
ai_sentiment %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n))
ai_sentiment %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>% View()
ai_sentiment %>%
group_by(sentiment) %>%
top_n(10) %>%
#ungroup() %>% View()
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
ai_sentiment %>%
group_by(sentiment) %>%
top_n(10) %>% View()
ai_sentiment %>%
group_by(sentiment) %>%
top_n(10) %>% View()
ai_sentiment %>%
group_by(sentiment) %>%
dplyr::top_n(10) %>% View()
ai_sentiment %>%
group_by("sentiment") %>%
ai_sentiment %>%
group_by("sentiment") %>%
dplyr::top_n(10) %>% View()
ai_sentiment %>%
group_by("sentiment") %>%
dplyr::top_n(10) %>% View()
library(tidyverse)
?top_n()
ai_sentiment %>%
count(word, sentiment, sort = TRUE) %>% View()
ai_sentiment %>%
count(word, sentiment, sort = TRUE) %>% ungroup() %>% View()
ai_sentiment %>%
count(word, sentiment, sort = TRUE) %>% ungroup() %>%
group_by(sentiment) %>%
dplyr::top_n(10) %>% View()
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
ai_sentiment %>%
count(word, sentiment, sort = TRUE) %>% ungroup() %>%
group_by(sentiment) %>%
dplyr::top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
